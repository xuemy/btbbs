# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-10 15:03
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.db.models.deletion
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('douban_id', models.IntegerField(db_index=True, unique=True)),
                ('subtype', models.CharField(blank=True, choices=[('movie', '\u7535\u5f71'), ('tv', '\u7535\u89c6\u5267')], db_index=True, default='movie', max_length=5, verbose_name='\u5206\u7c7b')),
                ('name', models.CharField(max_length=255)),
                ('original_title', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.URLField(null=True, verbose_name='\u6d77\u62a5\u56fe')),
                ('year', models.IntegerField(db_index=True, default=0, null=True, verbose_name='\u5e74\u4ee3')),
                ('rating', models.FloatField(db_index=True, default=0.0, null=True, verbose_name='\u8c46\u74e3\u8bc4\u5206')),
                ('summary', models.TextField(blank=True, verbose_name='\u7b80\u4ecb')),
                ('pubdate', models.DateField(db_index=True, null=True, verbose_name='\u4e0a\u6620\u65f6\u95f4')),
                ('intro', models.TextField(blank=True)),
                ('views', models.IntegerField(default=1)),
                ('genres', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), db_index=True, null=True, size=None, verbose_name='\u7c7b\u578b')),
                ('language', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), db_index=True, default=[], null=True, size=None, verbose_name='\u8bed\u8a00')),
                ('aka', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), null=True, size=None, verbose_name='\u53c8\u540d')),
                ('countries', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), db_index=True, null=True, size=None, verbose_name='\u56fd\u5bb6/\u5730\u533a')),
                ('casts', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), db_index=True, null=True, size=None, verbose_name='\u4e3b\u6f14')),
                ('directors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), db_index=True, null=True, size=None, verbose_name='\u5bfc\u6f14')),
                ('writer', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), db_index=True, null=True, size=None, verbose_name='\u7f16\u5267')),
                ('movie_duration', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), db_index=True, null=True, size=None, verbose_name='\u7247\u957f')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-pubdate', '-rating'],
            },
        ),
        migrations.CreateModel(
            name='Torrent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('etag', models.CharField(max_length=40, unique=True)),
                ('info_hash', models.CharField(max_length=40, unique=True)),
                ('f', models.FileField(upload_to=b'')),
                ('detail', models.TextField(null=True)),
                ('views', models.IntegerField(default=1)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bbs.Movie')),
            ],
        ),
        migrations.AlterIndexTogether(
            name='torrent',
            index_together=set([('etag', 'info_hash', 'id')]),
        ),
    ]
